From 25cc3455b747b158dd7a328fd1e405a4a2c20ba8 Mon Sep 17 00:00:00 2001
From: Piotr Stankiewicz <piotr.stankiewicz@docker.com>
Date: Mon, 3 Feb 2025 16:18:28 +0100
Subject: [PATCH 8/8] Avoid executable path resolution

Signed-off-by: Piotr Stankiewicz <piotr.stankiewicz@docker.com>
---
 linux-user/main.c           |  7 +++----
 linux-user/syscall.c        | 12 ++++++------
 linux-user/user-internals.h |  1 +
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/linux-user/main.c b/linux-user/main.c
index c02535d4e3..acd4c87e68 100644
--- a/linux-user/main.c
+++ b/linux-user/main.c
@@ -68,7 +68,7 @@
 #endif
 
 char *exec_path;
-char real_exec_path[PATH_MAX];
+char *real_exec_path;
 
 static bool opt_one_insn_per_tb;
 static const char *argv0;
@@ -825,10 +825,9 @@ int main(int argc, char **argv, char **envp)
 
     fprintf(stderr, "DEBUG: exec_path=%s after opening execfd\n", exec_path);
 
+    real_exec_path = (char *) malloc(PATH_MAX * sizeof(char));
     /* Resolve executable file name to full path name */
-    if (realpath(exec_path, real_exec_path)) {
-        exec_path = real_exec_path;
-    }
+    realpath(exec_path, real_exec_path);
 
     fprintf(stderr, "DEBUG: exec_path=%s after realpath resolution\n", exec_path);
 
diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index 63bdb3c154..32753c55bb 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -8424,9 +8424,9 @@ static int maybe_do_fake_open(CPUArchState *cpu_env, int dirfd,
             return -1;
         }
         if (safe) {
-            return safe_openat(dirfd, exec_path, flags, mode);
+            return safe_openat(dirfd, real_exec_path, flags, mode);
         } else {
-            return openat(dirfd, exec_path, flags, mode);
+            return openat(dirfd, real_exec_path, flags, mode);
         }
     }
 
@@ -8550,9 +8550,9 @@ ssize_t do_guest_readlink(const char *pathname, char *buf, size_t bufsiz)
          * Don't worry about sign mismatch as earlier mapping
          * logic would have thrown a bad address error.
          */
-        ret = MIN(strlen(exec_path), bufsiz);
+        ret = MIN(strlen(real_exec_path), bufsiz);
         /* We cannot NUL terminate the string. */
-        memcpy(buf, exec_path, ret);
+        memcpy(buf, real_exec_path, ret);
     } else {
         ret = readlink(path(pathname), buf, bufsiz);
     }
@@ -10599,9 +10599,9 @@ static abi_long do_syscall1(CPUArchState *cpu_env, int num, abi_long arg1,
                  * Don't worry about sign mismatch as earlier mapping
                  * logic would have thrown a bad address error.
                  */
-                ret = MIN(strlen(exec_path), arg4);
+                ret = MIN(strlen(real_exec_path), arg4);
                 /* We cannot NUL terminate the string. */
-                memcpy(p2, exec_path, ret);
+                memcpy(p2, real_exec_path, ret);
             } else {
                 ret = get_errno(readlinkat(arg1, path(p), p2, arg4));
             }
diff --git a/linux-user/user-internals.h b/linux-user/user-internals.h
index 46ffc093f4..4b9876b585 100644
--- a/linux-user/user-internals.h
+++ b/linux-user/user-internals.h
@@ -24,6 +24,7 @@
 #include "qemu/log.h"
 
 extern char *exec_path;
+extern char *real_exec_path;
 void init_task_state(TaskState *ts);
 void task_settid(TaskState *);
 void stop_all_tasks(void);
-- 
2.43.0

